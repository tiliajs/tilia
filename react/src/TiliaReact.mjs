// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Tilia from "tilia/src/Tilia.mjs";
import * as React from "react";

function make(ctx) {
  var _clear = ctx._clear;
  var _ready = ctx._ready;
  var _observe = ctx._observe;
  var computed = ctx.computed;
  var tilia = ctx.tilia;
  var useTilia = function () {
    var match = React.useState(0);
    var setCount = match[1];
    var o = _observe(function () {
          setCount(function (i) {
                return i + 1 | 0;
              });
        });
    React.useEffect(function () {
          _ready(o, true);
          return (function () {
                    _clear(o);
                  });
        });
  };
  var useComputed = function (fn) {
    return React.useMemo((function () {
                  return tilia({
                              value: computed(fn)
                            });
                }), []);
  };
  return {
          useTilia: useTilia,
          useComputed: useComputed
        };
}

var tr = make(Tilia._ctx);

var useTilia = tr.useTilia;

var useComputed = tr.useComputed;

export {
  useTilia ,
  useComputed ,
  make ,
}
/* tr Not a pure module */
